<UserControl x:Class="MessageHandler.MessageHandlerUserControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:messageHandler="clr-namespace:MessageHandler"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="800">
    <UserControl.Resources>

        <ResourceDictionary>
            <messageHandler:MessageImageConverter x:Key="MessageImageConverter" />

            <!-- Merge dictionaries -->

            <!-- White -->
            <Color x:Key="WhiteColor">#ffffff</Color>
            <SolidColorBrush x:Key="WhiteColorBrush" Color="{StaticResource WhiteColor}" />

            <!-- Error Red -->
            <Color x:Key="ErrorRedColor">#d9413d</Color>
            <SolidColorBrush x:Key="ErrorRedBrush" Color="{StaticResource ErrorRedColor}" />

            <!-- Success Green -->
            <Color x:Key="SuccessGreenColor">#19916b</Color>
            <SolidColorBrush x:Key="SuccessGreenBrush" Color="{StaticResource SuccessGreenColor}" />

            <!-- Create selector -->
            <messageHandler:MessageTemplateSelector x:Key="MessageTemplateSelector" />

            <ControlTemplate x:Key="MessageTemplate" TargetType="{x:Type Control}">
                <Grid MinWidth="200" MaxWidth="300" MinHeight="50">
                    <Border x:Name="Border"
                    Background="{TemplateBinding Background}"
                    BorderThickness="0,1,0,1"
                    CornerRadius="3"
                    BorderBrush="White">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>

                            <Grid.InputBindings>
                                <MouseBinding MouseAction="LeftClick" 
                                      Command="{Binding RelativeSource={RelativeSource AncestorType=ListBox, Mode=FindAncestor}, Path=DataContext.DeleteItemCommand}"
                                      CommandParameter="{Binding}"></MouseBinding>
                            </Grid.InputBindings>

                            <Image Source="{Binding Path=MessageType, Converter={StaticResource MessageImageConverter}, 
                                ConverterParameter='pack://application:,,,/MessageHandler;component/Images/{0}'}" MaxHeight="30"
                           MaxWidth="30" Margin="3,3,0,0" VerticalAlignment="Center"/>

                            <Grid Grid.Column="1" Margin="10,2,0,0">
                                <Grid.RowDefinitions>
                                    <RowDefinition />
                                    <RowDefinition />
                                </Grid.RowDefinitions>

                                <TextBlock Text="{Binding Path=Title}"
                               Foreground="{StaticResource WhiteColorBrush}"
                               FontSize="16"
                               FontWeight="SemiBold"
                               TextWrapping="Wrap" />

                                <TextBlock Grid.Row="1" Text="{Binding Path=Description}"
                               Foreground="{StaticResource WhiteColorBrush}"
                               FontSize="12"
                               TextWrapping="Wrap" />
                            </Grid>

                            <Button Grid.Column="2" Content="X" VerticalAlignment="Top" MaxHeight="20" Margin="2,2,5,0"
                            Command="{Binding RelativeSource={RelativeSource AncestorType=ListBox, Mode=FindAncestor}, Path=DataContext.DeleteItemCommand}"
                            CommandParameter="{Binding}"
                            FontWeight="SemiBold">
                                <Button.Style>
                                    <Style TargetType="{x:Type Button}">
                                        <Setter Property="Background" Value="Transparent" />
                                        <Setter Property="BorderBrush" Value="Transparent" />
                                        <Setter Property="BorderThickness" Value="0" />

                                        <Setter Property="Foreground" Value="{StaticResource WhiteColorBrush}" />

                                        <Setter Property="Template">
                                            <Setter.Value>
                                                <ControlTemplate TargetType="{x:Type Button}">
                                                    <Border Padding="{TemplateBinding Padding}" Background="{TemplateBinding Background}">
                                                        <ContentPresenter VerticalAlignment="Center" HorizontalAlignment="Center" />
                                                    </Border>
                                                </ControlTemplate>
                                            </Setter.Value>
                                        </Setter>

                                        <Style.Triggers>
                                            <Trigger Property="IsMouseOver" Value="True">
                                                <Setter Property="Foreground" Value="Gray" />
                                            </Trigger>
                                        </Style.Triggers>
                                    </Style>
                                </Button.Style>
                            </Button>
                        </Grid>
                    </Border>
                </Grid>
            </ControlTemplate>

            <!-- Error template style -->
            <DataTemplate x:Key="ErrorTemplate" DataType="{x:Type messageHandler:Message}">
                <ContentControl Template="{StaticResource MessageTemplate}" Background="{StaticResource ErrorRedBrush}" />
            </DataTemplate>

            <!-- Success template -->
            <DataTemplate x:Key="SuccessTemplate" DataType="{x:Type messageHandler:Message}">
                <ContentControl Template="{StaticResource MessageTemplate}" Background="{StaticResource SuccessGreenBrush}" />
            </DataTemplate>

            <DataTemplate x:Key="InformationTemplate" DataType="{x:Type messageHandler:Message}">
                <ContentControl Template="{StaticResource MessageTemplate}" Background="CornflowerBlue"></ContentControl>
            </DataTemplate>

            <Style TargetType="{x:Type ListBoxItem}">
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
                <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
                <Setter Property="Padding" Value="2,0,0,0"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ListBoxItem}">
                            <Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="true">
                                <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsSelected" Value="true">
                                    <Setter Property="Background" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                                    <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}"/>
                                </Trigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IsSelected" Value="true"/>
                                        <Condition Property="Selector.IsSelectionActive" Value="false"/>
                                    </MultiTrigger.Conditions>
                                    <Setter Property="Background" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightBrushKey}}"/>
                                    <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightTextBrushKey}}"/>
                                </MultiTrigger>
                                <Trigger Property="IsEnabled" Value="false">
                                    <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

        </ResourceDictionary>


    </UserControl.Resources>

    <ListBox Background="Transparent" ItemsSource="{Binding Path=Messages}" ItemTemplateSelector="{StaticResource MessageTemplateSelector}"
             BorderThickness="0" BorderBrush="Transparent">
        <ListBox.ItemsPanel>
            <ItemsPanelTemplate>
                <VirtualizingStackPanel VerticalAlignment="Bottom" />
            </ItemsPanelTemplate>
        </ListBox.ItemsPanel>

        <ListBox.ItemContainerStyle>
            <Style TargetType="{x:Type ListBoxItem}">
                <Setter Property="LayoutTransform">
                    <Setter.Value>
                        <ScaleTransform x:Name="transform" />
                    </Setter.Value>
                </Setter>
                <Style.Triggers>
                    <EventTrigger RoutedEvent="Loaded">
                        <EventTrigger.Actions>
                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimation Storyboard.TargetProperty="Opacity" From="0" To="1" Duration="0:0:2" />
                                    <DoubleAnimation Storyboard.TargetProperty="LayoutTransform.ScaleY" From="0" Duration="0:0:.2"/>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger.Actions>
                    </EventTrigger>
                </Style.Triggers>
            </Style>
        </ListBox.ItemContainerStyle>
    </ListBox>
</UserControl>